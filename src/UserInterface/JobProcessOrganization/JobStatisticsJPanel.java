/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.JobProcessOrganization;

import Business.Constant;
import Business.EcoSystem;
import Business.Enterpise.Enterprise;
import Business.Enterpise.JobProviderEnterprise;
import Business.Network.Network;
import Business.Organization.JobProcessOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.JobWorkRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Nishad
 */
public class JobStatisticsJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
    private JobProcessOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    EcoSystem business;
    
    /**
     * Creates new form JobStatisticsJPanel
     */
    public JobStatisticsJPanel(JPanel userProcessContainer, UserAccount userAccount, JobProcessOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization =(JobProcessOrganization) organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.business = business;
        //populateTable();
    }
    
    private void populateTable(){
        DefaultCategoryDataset barchardata = new DefaultCategoryDataset();
        int countprocessed=0,countassigned=0;
        for(WorkRequest request :organization.getWorkQueue().getWorkRequestList()){
            if(request.getStatus().equalsIgnoreCase( Constant.TR_REQUESTSTATUS_PROCESSED))
            {
                countprocessed++;
            }
            if(request.getStatus().equalsIgnoreCase( Constant.TR_REQUESTSTATUS_ASSIGNED))
            {
                countassigned++;
            }
        }
            barchardata.setValue(organization.getWorkQueue().getWorkRequestList().size(),
                                   Constant.TR_JOBREQUESTED,
                                    Constant.TR_JOBREQUESTED);
            barchardata.setValue(countprocessed,
                                   Constant.TR_REQUESTSTATUS_PROCESSED,
                                    Constant.TR_REQUESTSTATUS_PROCESSED);
            barchardata.setValue(countassigned,
                                   Constant.TR_REQUESTSTATUS_ASSIGNED,
                                    Constant.TR_REQUESTSTATUS_ASSIGNED);
        
        JFreeChart barChartdata=ChartFactory.createBarChart(Constant.TR_JOBMAP, Constant.TR_REQUESTTYPE, "count", barchardata);
        CategoryPlot p = barChartdata.getCategoryPlot();
        p.setRangeGridlinePaint(Color.LIGHT_GRAY);
        ChartPanel frame = new ChartPanel(barChartdata);
        jPanel1.add(frame,BorderLayout.CENTER);
        jPanel1.validate();
        frame.setVisible(true);
        frame.setSize(450,500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnJobWise = new javax.swing.JButton();

        jButton1.setText("Request Wise Chart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );

        btnJobWise.setText("Jobwise Wise Chart");
        btnJobWise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJobWiseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnJobWise, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnJobWise)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnJobWiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJobWiseActionPerformed
        // TODO add your handling code here:
         Map<String,Integer> jlist= new HashMap<String, Integer>();
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        for (Network network : business.getNetworkList()) {
                //Step 2-a: Check against each enterprise
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if(enterprise instanceof JobProviderEnterprise){
                    for (Organization organization : enterprise.getOrganizationList().getOrganizationList()) {
                        int counter=0;
                            ArrayList<WorkRequest> wk = organization.getWorkQueue().getWorkRequestList();
                            if (wk != null) {
                                for(WorkRequest qr : wk)
                                {
                                    if(qr.getStatus().equalsIgnoreCase(Constant.TR_REQUESTSTATUS_PROCESSED)){
                                        counter++;
                                    }
                                }
                                jlist.put(organization.getName(), counter);
                            }
                        }
                    break;
                    }
                }
        }
        for (Map.Entry entry : jlist.entrySet()) {
		
                pieDataset.setValue((String)entry.getKey(),(Integer)entry.getValue());
	}
        
        JFreeChart Chartdata=ChartFactory.createPieChart(Constant.TR_JOBMAP, pieDataset, true, true, true);
        PiePlot p =(PiePlot) Chartdata.getPlot();
        //p.setForegroundAlpha(TOP_ALIGNMENT);
        ChartPanel frame = new ChartPanel(Chartdata);
        jPanel1.add(frame,BorderLayout.CENTER);
        jPanel1.validate();
        frame.setVisible(true);
        frame.setSize(450,500);
    }//GEN-LAST:event_btnJobWiseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnJobWise;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
